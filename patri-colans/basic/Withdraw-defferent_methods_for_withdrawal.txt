Three different ways for withdrawal are:-
1.transfer
2.send
3.call


--------------------------------------------------------------------------------------------------------------------
//1.transfer:- it's simplest
//transper the funds to who ever is calling the withdraw function
//get the balance of our contract (this) refers to the whole contract. native blockchain currency balance
//typecast msg.sender from address type to payable
//msg.sender = address
//pyable(msg.sender) = payable address

payable(msg.sender).transfer(address(this).balance);

--------------------------------------------------------------------------------------------------------------------
//2.send:-

bool sendSuccess = payable(msg.sender).send(address(this).balance);
require(sendSuccess,"send failed");
//send will only revert this transaction if we add this require statement

---------------------------------------------------------------------------------------------
//3.call  05:20:00  (blue)
//call is the first lower level command in solidity code
//call function is incredibly powerfull 
// and we can use it to call virtually any function in all over etherium without even having to have ABI

//(bool callSucess,bytes memory dataReturned) = payable(msg.sender).call{value:address(this).balance}("");
(bool callSuccess,) = payable(msg.sender).call{value:address(this).balance}("");
require(callSuccess,"call failed");


//.call("----here--") function we want to call on some other contract
//value asif wallet value
//as bytes objects are array they need memory
// call function returns two variables
---------------------------------------------------------------------------------------------
DisAdvantages/Overview:-
1.transfer (2300 gas, throws error)//if more gas is used. it trows an error and revert transaction
2.send (2300 gas,returns bool)//if it fails it returns a boolean of whether or not we sucessfull
3.call (forward all gas or set gas, return bool)

Note:-Only payable can send native blockchain tokens